import os
from fastapi import FastAPI, Request
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from openai import OpenAI

# === –¢–æ–∫–µ–Ω–¥–µ—Ä –º–µ–Ω –±–∞–ø—Ç–∞—É–ª–∞—Ä ===
BOT_TOKEN = os.getenv("TG_BOT_TOKEN") or "8005464032:AAGZJW7DjwUI_CxRYm-5J4bPUEqGw1QbBwg"
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY") or "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"
WEBHOOK_HOST = "https://durakbott.onrender.com"
WEBHOOK_PATH = f"/webhook/{BOT_TOKEN}"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# === FastAPI, Telegram –∂”ô–Ω–µ OpenRouter –∫–ª–∏–µ–Ω—Ç—Ç–µ—Ä—ñ ===
app = FastAPI()
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
client = OpenAI(base_url="https://openrouter.ai/api/v1", api_key=OPENROUTER_API_KEY)

# === Start –∫–æ–º–∞–Ω–¥–∞—Å—ã ===
@dp.message(commands=["start"])
async def start_cmd(message: types.Message):
    web_app_url = "https://erzhan279.github.io/Durakkkkkkk/"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üÉè Durak Mini App –∞—à—É", web_app=WebAppInfo(url=web_app_url))]
    ])
    await message.answer("–°”ô–ª–µ–º üëã\nDurak Mini App –æ–π—ã–Ω—ã–Ω –±–∞—Å—Ç–∞—É “Ø—à—ñ–Ω —Ç”©–º–µ–Ω–¥–µ–≥—ñ –±–∞—Ç—ã—Ä–º–∞–Ω—ã –±–∞—Å:", reply_markup=keyboard)

# === /winner –∂”ô–Ω–µ /loser –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä—ã ===
@dp.message(commands=["winner"])
async def winner(message: types.Message):
    username = message.from_user.first_name
    ai_response = get_ai_reaction(f"–û–π—ã–Ω—à—ã {username} Durak –æ–π—ã–Ω—ã–Ω–¥–∞ –∂–µ“£–¥—ñ. “ö–∞–∑–∞“õ—à–∞ –º–∞“õ—Ç–∞—É —Å”©–∑–¥–µ—Ä–º–µ–Ω, ”ô–∑—ñ–ª “õ–æ—Å—ã–ø –∂–∞—É–∞–ø –±–µ—Ä.")
    await message.answer(ai_response)

@dp.message(commands=["loser"])
async def loser(message: types.Message):
    username = message.from_user.first_name
    ai_response = get_ai_reaction(f"–û–π—ã–Ω—à—ã {username} Durak –æ–π—ã–Ω—ã–Ω–¥–∞ –∂–µ“£—ñ–ª–¥—ñ. “ö–∞–∑–∞“õ—à–∞ –∂–µ“£—ñ–ª–¥—ñ –¥–µ–ø, ”ô–∑—ñ–ª–º–µ–Ω –º–∞–∑–∞“õ—Ç–∞.")
    await message.answer(ai_response)

# === OpenRouter AI –∂–∞—É–∞–ø —Ñ—É–Ω–∫—Ü–∏—è—Å—ã ===
def get_ai_reaction(prompt: str) -> str:
    try:
        response = client.chat.completions.create(
            model="openai/gpt-4o-mini",
            messages=[
                {"role": "system", "content": "–°–µ–Ω Durak –æ–π—ã–Ω—ã–Ω—ã“£ –∫”©“£—ñ–ª–¥—ñ –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä—ã—Å—ã“£."},
                {"role": "user", "content": prompt}
            ]
        )
        return response.choices[0].message.content
    except Exception as e:
        return f"AI –∂–∞—É–∞–ø –±–µ—Ä–µ –∞–ª–º–∞–¥—ã üòÖ ({e})"

# === Webhook –æ—Ä–Ω–∞—Ç—É –∂”ô–Ω–µ —Å–µ—Ä–≤–µ—Ä ===
@app.on_event("startup")
async def on_startup():
    await bot.set_webhook(WEBHOOK_URL)
    print(f"üöÄ Webhook –æ—Ä–Ω–∞—Ç—ã–ª–¥—ã: {WEBHOOK_URL}")

@app.on_event("shutdown")
async def on_shutdown():
    await bot.delete_webhook()

@app.post(WEBHOOK_PATH)
async def telegram_webhook(request: Request):
    data = await request.json()
    update = types.Update(**data)
    await dp.feed_update(bot, update)
    return {"ok": True}

@app.get("/")
async def root():
    return {"status": "Durak bot with AI is running üöÄ"}
